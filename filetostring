#!/usr/bin/env python3

import argparse


def to_c_string(content: str) -> str:
    escaped_content = (
        content.replace("\\", "\\\\").replace('"', '\\"').replace("\n", "\\n")
    )
    return f'"{escaped_content}"'


def to_python_string(content: str) -> str:
    # Built into python. Just call repr().
    return repr(content)


# Dictionary of languages and their corresponding conversion functions
LANGUAGES = {
    "c": to_c_string,
    "python": to_python_string,
}

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Convert a file to a string in various programming languages."
    )
    parser.add_argument("input_file", help="The input file to convert")
    parser.add_argument(
        "-o", "--output", help="The output file (if not specified, print to stdout)"
    )

    lang_group = parser.add_mutually_exclusive_group()
    lang_group.add_argument(
        "-c", "--c", action="store_true", help="Convert to C string (default)"
    )
    lang_group.add_argument(
        "-p", "--python", action="store_true", help="Convert to Python string"
    )

    args = parser.parse_args()

    # Read the input file
    with open(args.input_file, "r") as infile:
        content = infile.read()

    # Determine which language to use
    lang = next(
        (lang for lang, value in vars(args).items() if value and lang in LANGUAGES), "c"
    )
    result = LANGUAGES[lang](content)

    if args.output:
        with open(args.output, "w") as outfile:
            outfile.write(result)
    else:
        print(result)
